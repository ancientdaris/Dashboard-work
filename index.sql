-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.activity_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  action text NOT NULL,
  entity_type text,
  entity_id uuid,
  metadata jsonb,
  ip_address text,
  user_agent text,
  changed_from jsonb,
  changed_to jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT activity_logs_pkey PRIMARY KEY (id),
  CONSTRAINT activity_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.api_integrations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  integration_name text NOT NULL UNIQUE,
  integration_type text CHECK (integration_type = ANY (ARRAY['payment_gateway'::text, 'nbfc'::text, 'sms'::text, 'email'::text, 'whatsapp'::text, 'shipping'::text, 'gst'::text, 'accounting'::text, 'other'::text])),
  provider text,
  api_key_encrypted text,
  api_secret_encrypted text,
  webhook_url text,
  webhook_secret text,
  config jsonb,
  is_active boolean DEFAULT false,
  is_sandbox boolean DEFAULT true,
  last_sync_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT api_integrations_pkey PRIMARY KEY (id),
  CONSTRAINT api_integrations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.attendance (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid,
  date date NOT NULL,
  check_in_time timestamp with time zone,
  check_out_time timestamp with time zone,
  status text CHECK (status = ANY (ARRAY['present'::text, 'absent'::text, 'late'::text, 'half_day'::text, 'on_leave'::text, 'holiday'::text])),
  hours_worked numeric,
  overtime_hours numeric DEFAULT 0,
  location_check_in text,
  location_check_out text,
  marked_by uuid,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT attendance_pkey PRIMARY KEY (id),
  CONSTRAINT attendance_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id),
  CONSTRAINT attendance_marked_by_fkey FOREIGN KEY (marked_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.audit_trail (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  action text NOT NULL,
  entity_type text,
  entity_id uuid,
  field_name text,
  old_value text,
  new_value text,
  metadata jsonb,
  ip_address text,
  user_agent text,
  session_id text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_trail_pkey PRIMARY KEY (id),
  CONSTRAINT audit_trail_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.backup_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  backup_type text CHECK (backup_type = ANY (ARRAY['full'::text, 'incremental'::text, 'schema'::text, 'data'::text])),
  backup_location text,
  file_size bigint,
  status text CHECK (status = ANY (ARRAY['initiated'::text, 'in_progress'::text, 'completed'::text, 'failed'::text])),
  initiated_by uuid,
  completed_at timestamp with time zone,
  error_message text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT backup_history_pkey PRIMARY KEY (id),
  CONSTRAINT backup_history_initiated_by_fkey FOREIGN KEY (initiated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.cash_sales (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid,
  user_id uuid NOT NULL,
  sale_amount numeric NOT NULL,
  quantity_sold integer,
  product_details jsonb,
  payment_method text DEFAULT 'cash'::text CHECK (payment_method = ANY (ARRAY['cash'::text, 'upi'::text, 'card'::text, 'other'::text])),
  customer_type text CHECK (customer_type = ANY (ARRAY['walk_in'::text, 'regular_untracked'::text, 'anonymous'::text])),
  notes text,
  sold_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cash_sales_pkey PRIMARY KEY (id),
  CONSTRAINT cash_sales_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.incognito_sessions(id),
  CONSTRAINT cash_sales_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.commission_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  rule_name text NOT NULL,
  transaction_type text CHECK (transaction_type = ANY (ARRAY['order'::text, 'credit'::text, 'payment'::text, 'general'::text])),
  commission_type text CHECK (commission_type = ANY (ARRAY['percentage'::text, 'fixed'::text])),
  commission_value numeric NOT NULL,
  min_transaction_amount numeric,
  max_transaction_amount numeric,
  applicable_to_business_type text CHECK (applicable_to_business_type = ANY (ARRAY['wholesaler'::text, 'retailer'::text, 'designer'::text, 'all'::text])),
  is_active boolean DEFAULT true,
  effective_from date NOT NULL,
  effective_to date,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_rules_pkey PRIMARY KEY (id),
  CONSTRAINT commission_rules_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.commission_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transaction_number text NOT NULL UNIQUE,
  reference_type text CHECK (reference_type = ANY (ARRAY['order'::text, 'payment'::text, 'credit'::text, 'other'::text])),
  reference_id uuid,
  profile_id uuid,
  base_amount numeric NOT NULL,
  commission_amount numeric NOT NULL,
  commission_rule_id uuid,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'paid'::text, 'cancelled'::text])),
  approved_by uuid,
  approved_at timestamp with time zone,
  paid_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT commission_transactions_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT commission_transactions_commission_rule_id_fkey FOREIGN KEY (commission_rule_id) REFERENCES public.commission_rules(id),
  CONSTRAINT commission_transactions_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.compliance_checklist (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  profile_id uuid,
  checklist_type text CHECK (checklist_type = ANY (ARRAY['onboarding'::text, 'monthly'::text, 'quarterly'::text, 'yearly'::text, 'audit'::text])),
  item_name text NOT NULL,
  description text,
  is_completed boolean DEFAULT false,
  completed_at timestamp with time zone,
  completed_by uuid,
  due_date date,
  priority text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT compliance_checklist_pkey PRIMARY KEY (id),
  CONSTRAINT compliance_checklist_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT compliance_checklist_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.compliance_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_number text NOT NULL UNIQUE,
  document_type text CHECK (document_type = ANY (ARRAY['invoice'::text, 'challan'::text, 'credit_note'::text, 'debit_note'::text, 'purchase_order'::text, 'delivery_note'::text, 'tax_invoice'::text, 'proforma_invoice'::text])),
  reference_type text,
  reference_id uuid,
  profile_id uuid,
  file_url text,
  file_name text,
  file_size integer,
  file_hash text,
  mime_type text,
  is_gst_compliant boolean DEFAULT false,
  metadata jsonb,
  generated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT compliance_documents_pkey PRIMARY KEY (id),
  CONSTRAINT compliance_documents_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.credit_applications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  application_number text NOT NULL UNIQUE,
  retailer_id uuid,
  requested_amount numeric NOT NULL,
  approved_amount numeric,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'osas_review'::text, 'nbfc_review'::text, 'approved'::text, 'rejected'::text, 'disbursed'::text])),
  osas_approved_by uuid,
  osas_approved_at timestamp with time zone,
  nbfc_approved_at timestamp with time zone,
  disbursed_at timestamp with time zone,
  tenure_months integer,
  interest_rate numeric,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_applications_pkey PRIMARY KEY (id),
  CONSTRAINT credit_applications_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id),
  CONSTRAINT credit_applications_osas_approved_by_fkey FOREIGN KEY (osas_approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.credit_scores (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  retailer_id uuid,
  score integer CHECK (score >= 0 AND score <= 1000),
  purchase_history_score integer,
  repayment_score integer,
  business_age_score integer,
  calculated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_scores_pkey PRIMARY KEY (id),
  CONSTRAINT credit_scores_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.credit_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transaction_number text NOT NULL UNIQUE,
  retailer_id uuid,
  transaction_type text CHECK (transaction_type = ANY (ARRAY['disbursement'::text, 'repayment'::text, 'late_fee'::text, 'waiver'::text])),
  amount numeric NOT NULL,
  reference_id uuid,
  reference_type text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT credit_transactions_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.dead_stock_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  product_id uuid NOT NULL,
  identified_at timestamp with time zone DEFAULT now(),
  reason text CHECK (reason = ANY (ARRAY['low_demand'::text, 'near_expiry'::text, 'outdated'::text, 'damaged'::text, 'seasonal'::text, 'other'::text])),
  stock_age_days integer,
  original_stock_value numeric,
  current_stock_value numeric,
  quantity integer NOT NULL,
  suggested_discount_percentage numeric,
  status text DEFAULT 'identified'::text CHECK (status = ANY (ARRAY['identified'::text, 'listed'::text, 'partially_sold'::text, 'cleared'::text, 'written_off'::text])),
  cleared_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dead_stock_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT dead_stock_analytics_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.dead_stock_sales (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  product_id uuid NOT NULL,
  order_id uuid,
  quantity_sold integer NOT NULL,
  original_price numeric NOT NULL,
  discount_percentage numeric NOT NULL,
  sale_price numeric NOT NULL,
  customer_type text CHECK (customer_type = ANY (ARRAY['retailer'::text, 'wholesaler'::text, 'end_customer'::text, 'bulk_buyer'::text])),
  profit_loss numeric,
  sold_by uuid,
  sold_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dead_stock_sales_pkey PRIMARY KEY (id),
  CONSTRAINT dead_stock_sales_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT dead_stock_sales_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT dead_stock_sales_sold_by_fkey FOREIGN KEY (sold_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.deliveries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  delivery_number text NOT NULL UNIQUE,
  status USER-DEFINED DEFAULT 'pending'::delivery_status,
  carrier text,
  tracking_number text,
  scheduled_date date,
  delivered_date timestamp with time zone,
  delivery_address text,
  recipient_name text,
  recipient_phone text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  assigned_to uuid,
  delivery_fee numeric DEFAULT 0,
  CONSTRAINT deliveries_pkey PRIMARY KEY (id),
  CONSTRAINT deliveries_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT deliveries_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.staff(id)
);
CREATE TABLE public.discovery_connection_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wholesaler_id uuid NOT NULL,
  retailer_id uuid NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text, 'blocked'::text])),
  message text,
  proposed_credit_limit numeric,
  proposed_payment_terms text,
  responded_at timestamp with time zone,
  response_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT discovery_connection_requests_pkey PRIMARY KEY (id),
  CONSTRAINT discovery_connection_requests_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id),
  CONSTRAINT discovery_connection_requests_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.dispute_comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  dispute_id uuid,
  user_id uuid,
  comment text NOT NULL,
  is_internal boolean DEFAULT false,
  attachments jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dispute_comments_pkey PRIMARY KEY (id),
  CONSTRAINT dispute_comments_dispute_id_fkey FOREIGN KEY (dispute_id) REFERENCES public.disputes(id),
  CONSTRAINT dispute_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.disputes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  dispute_number text NOT NULL UNIQUE,
  raised_by uuid,
  dispute_type text CHECK (dispute_type = ANY (ARRAY['order'::text, 'payment'::text, 'delivery'::text, 'credit'::text, 'product'::text, 'invoice'::text, 'refund'::text, 'other'::text])),
  reference_type text,
  reference_id uuid,
  subject text NOT NULL,
  description text,
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  status text DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'under_review'::text, 'escalated'::text, 'pending_action'::text, 'resolved'::text, 'closed'::text, 'rejected'::text])),
  assigned_to uuid,
  escalated_to uuid,
  resolved_by uuid,
  resolution text,
  attachments jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT disputes_pkey PRIMARY KEY (id),
  CONSTRAINT disputes_raised_by_fkey FOREIGN KEY (raised_by) REFERENCES public.profiles(id),
  CONSTRAINT disputes_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.profiles(id),
  CONSTRAINT disputes_escalated_to_fkey FOREIGN KEY (escalated_to) REFERENCES public.profiles(id),
  CONSTRAINT disputes_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.emi_schedules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  credit_application_id uuid,
  emi_number integer NOT NULL,
  due_date date NOT NULL,
  amount numeric NOT NULL,
  paid_amount numeric DEFAULT 0,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'paid'::text, 'overdue'::text, 'waived'::text])),
  paid_at timestamp with time zone,
  late_fee numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT emi_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT emi_schedules_credit_application_id_fkey FOREIGN KEY (credit_application_id) REFERENCES public.credit_applications(id)
);
CREATE TABLE public.footfall_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  store_id uuid,
  date date NOT NULL,
  hour integer CHECK (hour >= 0 AND hour <= 23),
  visitor_count integer DEFAULT 0,
  unique_visitors integer DEFAULT 0,
  peak_hour boolean DEFAULT false,
  source text,
  recorded_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT footfall_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT footfall_analytics_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.gst_returns (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  return_number text NOT NULL UNIQUE,
  profile_id uuid,
  return_type text CHECK (return_type = ANY (ARRAY['GSTR1'::text, 'GSTR3B'::text, 'GSTR4'::text, 'GSTR9'::text, 'GSTR9C'::text])),
  period_month integer CHECK (period_month >= 1 AND period_month <= 12),
  period_year integer,
  total_sales numeric DEFAULT 0,
  total_purchases numeric DEFAULT 0,
  igst numeric DEFAULT 0,
  cgst numeric DEFAULT 0,
  sgst numeric DEFAULT 0,
  cess numeric DEFAULT 0,
  total_tax numeric DEFAULT 0,
  input_tax_credit numeric DEFAULT 0,
  tax_payable numeric DEFAULT 0,
  filed_at timestamp with time zone,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'filed'::text, 'revised'::text, 'cancelled'::text])),
  filed_by uuid,
  acknowledgement_number text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gst_returns_pkey PRIMARY KEY (id),
  CONSTRAINT gst_returns_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT gst_returns_filed_by_fkey FOREIGN KEY (filed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.holidays (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  date date NOT NULL,
  is_mandatory boolean DEFAULT true,
  applicable_to_region text,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT holidays_pkey PRIMARY KEY (id)
);
CREATE TABLE public.incentive_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  rule_name text NOT NULL,
  rule_type text CHECK (rule_type = ANY (ARRAY['sales_target'::text, 'attendance'::text, 'customer_satisfaction'::text, 'performance'::text, 'custom'::text])),
  target_value numeric,
  incentive_amount numeric,
  incentive_percentage numeric,
  applicable_to_department text,
  applicable_to_position text,
  is_active boolean DEFAULT true,
  effective_from date NOT NULL,
  effective_to date,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT incentive_rules_pkey PRIMARY KEY (id),
  CONSTRAINT incentive_rules_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.incentive_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid NOT NULL,
  incentive_rule_id uuid,
  amount numeric NOT NULL,
  reason text,
  achieved_value numeric,
  target_value numeric,
  period_start date,
  period_end date,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'paid'::text, 'rejected'::text])),
  approved_by uuid,
  approved_at timestamp with time zone,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT incentive_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT incentive_transactions_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id),
  CONSTRAINT incentive_transactions_incentive_rule_id_fkey FOREIGN KEY (incentive_rule_id) REFERENCES public.incentive_rules(id),
  CONSTRAINT incentive_transactions_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.incognito_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_token text NOT NULL UNIQUE,
  user_id uuid,
  started_at timestamp with time zone DEFAULT now(),
  ended_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT incognito_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT incognito_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.inventory (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  product_id uuid UNIQUE,
  quantity_in_stock integer DEFAULT 0,
  reorder_level integer DEFAULT 10,
  reorder_quantity integer DEFAULT 50,
  warehouse_location text,
  last_restocked_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  warehouse_id uuid,
  CONSTRAINT inventory_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT inventory_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.inventory_batches (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  batch_number text NOT NULL,
  product_id uuid,
  warehouse_id uuid,
  quantity integer NOT NULL DEFAULT 0,
  manufactured_date date,
  expiry_date date,
  received_date timestamp with time zone DEFAULT now(),
  cost_price numeric,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT inventory_batches_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_batches_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT inventory_batches_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  invoice_number text NOT NULL UNIQUE,
  order_id uuid,
  retailer_id uuid,
  status USER-DEFINED DEFAULT 'draft'::invoice_status,
  issue_date date NOT NULL,
  due_date date NOT NULL,
  subtotal numeric NOT NULL,
  tax_amount numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  total_amount numeric NOT NULL,
  notes text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT invoices_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id),
  CONSTRAINT invoices_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.leave_balances (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid,
  year integer NOT NULL,
  sick_leave_total integer DEFAULT 12,
  sick_leave_used numeric DEFAULT 0,
  sick_leave_balance numeric DEFAULT 12,
  casual_leave_total integer DEFAULT 12,
  casual_leave_used numeric DEFAULT 0,
  casual_leave_balance numeric DEFAULT 12,
  earned_leave_total integer DEFAULT 18,
  earned_leave_used numeric DEFAULT 0,
  earned_leave_balance numeric DEFAULT 18,
  compensatory_leave numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT leave_balances_pkey PRIMARY KEY (id),
  CONSTRAINT leave_balances_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id)
);
CREATE TABLE public.leave_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  request_number text NOT NULL UNIQUE,
  staff_id uuid,
  leave_type text CHECK (leave_type = ANY (ARRAY['sick'::text, 'casual'::text, 'earned'::text, 'unpaid'::text, 'maternity'::text, 'paternity'::text, 'compensatory'::text])),
  start_date date NOT NULL,
  end_date date NOT NULL,
  total_days numeric NOT NULL,
  reason text,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'cancelled'::text])),
  approved_by uuid,
  approved_at timestamp with time zone,
  rejection_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT leave_requests_pkey PRIMARY KEY (id),
  CONSTRAINT leave_requests_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id),
  CONSTRAINT leave_requests_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.ledger_entries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  entry_number text NOT NULL UNIQUE,
  profile_id uuid,
  entry_type text CHECK (entry_type = ANY (ARRAY['debit'::text, 'credit'::text])),
  category text CHECK (category = ANY (ARRAY['sales'::text, 'purchase'::text, 'payment'::text, 'refund'::text, 'commission'::text, 'settlement'::text, 'other'::text])),
  amount numeric NOT NULL,
  reference_type text,
  reference_id uuid,
  balance_after numeric,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ledger_entries_pkey PRIMARY KEY (id),
  CONSTRAINT ledger_entries_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.notification_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  notification_id uuid,
  channel text CHECK (channel = ANY (ARRAY['push'::text, 'email'::text, 'sms'::text, 'whatsapp'::text, 'in_app'::text])),
  recipient text,
  status text CHECK (status = ANY (ARRAY['queued'::text, 'sent'::text, 'failed'::text, 'delivered'::text, 'read'::text, 'clicked'::text])),
  error_message text,
  provider text,
  provider_message_id text,
  sent_at timestamp with time zone,
  delivered_at timestamp with time zone,
  read_at timestamp with time zone,
  clicked_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_logs_pkey PRIMARY KEY (id),
  CONSTRAINT notification_logs_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES public.notifications(id)
);
CREATE TABLE public.notification_preferences (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  notification_type text,
  push_enabled boolean DEFAULT true,
  email_enabled boolean DEFAULT true,
  sms_enabled boolean DEFAULT false,
  whatsapp_enabled boolean DEFAULT false,
  in_app_enabled boolean DEFAULT true,
  quiet_hours_start time without time zone,
  quiet_hours_end time without time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.notification_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  template_name text NOT NULL UNIQUE,
  notification_type text,
  channel text CHECK (channel = ANY (ARRAY['push'::text, 'email'::text, 'sms'::text, 'whatsapp'::text])),
  subject text,
  body_template text NOT NULL,
  variables jsonb,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_templates_pkey PRIMARY KEY (id),
  CONSTRAINT notification_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  title text NOT NULL,
  message text,
  notification_type text CHECK (notification_type = ANY (ARRAY['payment'::text, 'delivery'::text, 'inventory'::text, 'compliance'::text, 'staff'::text, 'order'::text, 'credit'::text, 'alert'::text, 'reminder'::text, 'system'::text])),
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  action_url text,
  action_label text,
  reference_type text,
  reference_id uuid,
  metadata jsonb,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  product_id uuid,
  quantity integer NOT NULL,
  unit_price numeric NOT NULL,
  tax_rate numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  line_total numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.order_returns (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  return_number text NOT NULL UNIQUE,
  order_id uuid,
  retailer_id uuid,
  reason text,
  status text DEFAULT 'requested'::text CHECK (status = ANY (ARRAY['requested'::text, 'approved'::text, 'rejected'::text, 'processing'::text, 'completed'::text, 'cancelled'::text])),
  refund_amount numeric,
  refund_method text,
  replacement_order_id uuid,
  requested_by uuid,
  approved_by uuid,
  approved_at timestamp with time zone,
  completed_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_returns_pkey PRIMARY KEY (id),
  CONSTRAINT order_returns_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_returns_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id),
  CONSTRAINT order_returns_replacement_order_id_fkey FOREIGN KEY (replacement_order_id) REFERENCES public.orders(id),
  CONSTRAINT order_returns_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES public.profiles(id),
  CONSTRAINT order_returns_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_number text NOT NULL UNIQUE,
  retailer_id uuid,
  status USER-DEFINED DEFAULT 'pending'::order_status,
  subtotal numeric NOT NULL,
  tax_amount numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  total_amount numeric NOT NULL,
  notes text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id),
  CONSTRAINT orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.payment_settlements (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  settlement_number text NOT NULL UNIQUE,
  payment_id uuid,
  wholesaler_id uuid,
  retailer_id uuid,
  wholesaler_amount numeric NOT NULL,
  osas_commission numeric DEFAULT 0,
  nbfc_fee numeric DEFAULT 0,
  net_amount numeric NOT NULL,
  settlement_status text DEFAULT 'pending'::text CHECK (settlement_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text])),
  settled_at timestamp with time zone,
  settlement_reference text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_settlements_pkey PRIMARY KEY (id),
  CONSTRAINT payment_settlements_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id),
  CONSTRAINT payment_settlements_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id),
  CONSTRAINT payment_settlements_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  payment_number text NOT NULL UNIQUE,
  invoice_id uuid,
  retailer_id uuid,
  amount numeric NOT NULL,
  payment_method text,
  payment_date timestamp with time zone DEFAULT now(),
  status USER-DEFINED DEFAULT 'pending'::payment_status,
  reference_number text,
  notes text,
  is_same_day boolean DEFAULT false,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  gateway_transaction_id text,
  gateway_name text,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT payments_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id),
  CONSTRAINT payments_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  permission_name text NOT NULL UNIQUE,
  permission_code text NOT NULL UNIQUE,
  description text,
  module text,
  resource text,
  action text CHECK (action = ANY (ARRAY['create'::text, 'read'::text, 'update'::text, 'delete'::text, 'execute'::text, 'manage'::text, 'approve'::text, 'all'::text])),
  is_system boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT permissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.price_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wholesaler_id uuid NOT NULL,
  product_id uuid NOT NULL,
  price numeric NOT NULL,
  recorded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT price_history_pkey PRIMARY KEY (id),
  CONSTRAINT price_history_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id),
  CONSTRAINT price_history_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  sku text NOT NULL UNIQUE,
  name text NOT NULL,
  description text,
  category text,
  brand text,
  unit_price numeric NOT NULL,
  cost_price numeric,
  tax_rate numeric DEFAULT 0,
  image_url text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  hsn_code text,
  sac_code text,
  expiry_date date,
  batch_tracking_enabled boolean DEFAULT false,
  barcode text UNIQUE,
  weight numeric,
  dimensions jsonb,
  is_dead_stock boolean DEFAULT false,
  dead_stock_discount numeric DEFAULT 0,
  dead_stock_listed_at timestamp with time zone,
  CONSTRAINT products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL,
  full_name text,
  avatar_url text,
  role USER-DEFINED DEFAULT 'viewer'::user_role,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  business_type text CHECK (business_type = ANY (ARRAY['wholesaler'::text, 'retailer'::text, 'designer'::text])),
  account_status text DEFAULT 'pending'::text CHECK (account_status = ANY (ARRAY['pending'::text, 'approved'::text, 'suspended'::text, 'rejected'::text])),
  gst_number text,
  pan_number text,
  business_name text,
  verification_documents jsonb,
  verified_at timestamp with time zone,
  verified_by uuid,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT profiles_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.referral_codes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  referrer_id uuid NOT NULL,
  referral_code text NOT NULL UNIQUE,
  program_id uuid,
  total_uses integer DEFAULT 0,
  max_uses integer,
  is_active boolean DEFAULT true,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_codes_pkey PRIMARY KEY (id),
  CONSTRAINT referral_codes_referrer_id_fkey FOREIGN KEY (referrer_id) REFERENCES public.profiles(id),
  CONSTRAINT referral_codes_program_id_fkey FOREIGN KEY (program_id) REFERENCES public.referral_programs(id)
);
CREATE TABLE public.referral_programs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  program_name text NOT NULL,
  program_type text CHECK (program_type = ANY (ARRAY['fixed_amount'::text, 'percentage'::text, 'tiered'::text, 'custom'::text])),
  referrer_reward_amount numeric,
  referrer_reward_percentage numeric,
  referee_reward_amount numeric,
  referee_reward_percentage numeric,
  min_transaction_amount numeric DEFAULT 0,
  max_rewards_per_referrer integer,
  reward_validity_days integer,
  is_active boolean DEFAULT true,
  applicable_to text CHECK (applicable_to = ANY (ARRAY['wholesaler'::text, 'retailer'::text, 'both'::text])),
  terms_conditions text,
  effective_from date NOT NULL,
  effective_to date,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_programs_pkey PRIMARY KEY (id),
  CONSTRAINT referral_programs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.referral_rewards (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  referral_transaction_id uuid,
  reward_type text CHECK (reward_type = ANY (ARRAY['cash'::text, 'credit'::text, 'discount'::text, 'points'::text])),
  reward_amount numeric NOT NULL,
  is_redeemed boolean DEFAULT false,
  redeemed_at timestamp with time zone,
  redeemed_in_order_id uuid,
  expires_at timestamp with time zone,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'redeemed'::text, 'expired'::text, 'cancelled'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_rewards_pkey PRIMARY KEY (id),
  CONSTRAINT referral_rewards_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT referral_rewards_referral_transaction_id_fkey FOREIGN KEY (referral_transaction_id) REFERENCES public.referral_transactions(id),
  CONSTRAINT referral_rewards_redeemed_in_order_id_fkey FOREIGN KEY (redeemed_in_order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.referral_transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  referral_code_id uuid NOT NULL,
  referrer_id uuid NOT NULL,
  referee_id uuid NOT NULL,
  program_id uuid,
  referrer_reward_amount numeric DEFAULT 0,
  referee_reward_amount numeric DEFAULT 0,
  transaction_amount numeric,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'qualified'::text, 'rewarded'::text, 'expired'::text, 'cancelled'::text])),
  qualified_at timestamp with time zone,
  rewarded_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT referral_transactions_referral_code_id_fkey FOREIGN KEY (referral_code_id) REFERENCES public.referral_codes(id),
  CONSTRAINT referral_transactions_referrer_id_fkey FOREIGN KEY (referrer_id) REFERENCES public.profiles(id),
  CONSTRAINT referral_transactions_referee_id_fkey FOREIGN KEY (referee_id) REFERENCES public.profiles(id),
  CONSTRAINT referral_transactions_program_id_fkey FOREIGN KEY (program_id) REFERENCES public.referral_programs(id)
);
CREATE TABLE public.retailer_business_profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  retailer_id uuid NOT NULL UNIQUE,
  business_category ARRAY,
  annual_turnover_range text,
  employee_count integer,
  store_area_sqft numeric,
  has_online_presence boolean DEFAULT false,
  website_url text,
  social_media_links jsonb,
  preferred_brands ARRAY,
  latitude numeric,
  longitude numeric,
  service_radius_km numeric,
  accepts_credit boolean DEFAULT false,
  min_order_value numeric,
  delivery_available boolean DEFAULT false,
  operating_hours jsonb,
  is_verified boolean DEFAULT false,
  verification_date timestamp with time zone,
  visibility_status text DEFAULT 'public'::text CHECK (visibility_status = ANY (ARRAY['public'::text, 'private'::text, 'selective'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT retailer_business_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT retailer_business_profiles_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.retailer_discovery_preferences (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wholesaler_id uuid NOT NULL,
  search_radius_km numeric DEFAULT 50,
  preferred_categories ARRAY,
  min_annual_turnover text,
  min_credit_score numeric,
  preferred_payment_terms ARRAY,
  exclude_existing_partners boolean DEFAULT true,
  auto_connect boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT retailer_discovery_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT retailer_discovery_preferences_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.retailer_rankings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  retailer_id uuid,
  period text CHECK (period = ANY (ARRAY['weekly'::text, 'monthly'::text, 'quarterly'::text, 'yearly'::text])),
  period_start date NOT NULL,
  period_end date NOT NULL,
  total_purchases numeric DEFAULT 0,
  total_orders integer DEFAULT 0,
  payment_punctuality_score numeric,
  credit_score numeric,
  overall_score numeric,
  rank integer,
  previous_rank integer,
  calculated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT retailer_rankings_pkey PRIMARY KEY (id),
  CONSTRAINT retailer_rankings_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.retailers(id)
);
CREATE TABLE public.retailers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  email text,
  phone text,
  address text,
  city text,
  state text,
  postal_code text,
  country text,
  tax_id text,
  credit_limit numeric DEFAULT 0,
  outstanding_balance numeric DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  gstin text,
  CONSTRAINT retailers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.return_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  return_id uuid,
  order_item_id uuid,
  product_id uuid,
  quantity integer NOT NULL,
  unit_price numeric NOT NULL,
  line_total numeric NOT NULL,
  reason text,
  condition text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT return_items_pkey PRIMARY KEY (id),
  CONSTRAINT return_items_return_id_fkey FOREIGN KEY (return_id) REFERENCES public.order_returns(id),
  CONSTRAINT return_items_order_item_id_fkey FOREIGN KEY (order_item_id) REFERENCES public.order_items(id),
  CONSTRAINT return_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.role_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  role text NOT NULL,
  permission_id uuid,
  is_granted boolean DEFAULT true,
  granted_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT role_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id),
  CONSTRAINT role_permissions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.salary_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid NOT NULL,
  payment_period_start date NOT NULL,
  payment_period_end date NOT NULL,
  basic_salary numeric NOT NULL,
  total_incentives numeric DEFAULT 0,
  total_deductions numeric DEFAULT 0,
  net_salary numeric NOT NULL,
  payment_date date,
  payment_method text CHECK (payment_method = ANY (ARRAY['bank_transfer'::text, 'cash'::text, 'cheque'::text, 'upi'::text])),
  payment_reference text,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'paid'::text, 'failed'::text])),
  notes text,
  paid_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT salary_payments_pkey PRIMARY KEY (id),
  CONSTRAINT salary_payments_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id),
  CONSTRAINT salary_payments_paid_by_fkey FOREIGN KEY (paid_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.sales_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  profile_id uuid,
  date date NOT NULL,
  total_orders integer DEFAULT 0,
  total_sales numeric DEFAULT 0,
  total_cost numeric DEFAULT 0,
  total_profit numeric DEFAULT 0,
  cash_sales numeric DEFAULT 0,
  credit_sales numeric DEFAULT 0,
  average_order_value numeric DEFAULT 0,
  top_product_id uuid,
  top_category text,
  calculated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sales_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT sales_analytics_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT sales_analytics_top_product_id_fkey FOREIGN KEY (top_product_id) REFERENCES public.products(id)
);
CREATE TABLE public.same_day_payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  payment_id uuid,
  processed_at timestamp with time zone DEFAULT now(),
  processing_fee numeric DEFAULT 0,
  net_amount numeric NOT NULL,
  approved_by uuid,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT same_day_payments_pkey PRIMARY KEY (id),
  CONSTRAINT same_day_payments_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id),
  CONSTRAINT same_day_payments_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.scheduled_notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  template_id uuid,
  scheduled_at timestamp with time zone NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'sent'::text, 'failed'::text, 'cancelled'::text])),
  notification_data jsonb,
  sent_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT scheduled_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT scheduled_notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT scheduled_notifications_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.notification_templates(id)
);
CREATE TABLE public.staff (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  employee_id text NOT NULL UNIQUE,
  department text,
  position text,
  phone text,
  hire_date date,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT staff_pkey PRIMARY KEY (id),
  CONSTRAINT staff_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.staff_performance (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid,
  date date NOT NULL,
  orders_handled integer DEFAULT 0,
  total_sales numeric DEFAULT 0,
  attendance_hours numeric DEFAULT 0,
  efficiency_score numeric,
  customer_satisfaction_score numeric,
  notes text,
  calculated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT staff_performance_pkey PRIMARY KEY (id),
  CONSTRAINT staff_performance_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id)
);
CREATE TABLE public.staff_salaries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  staff_id uuid NOT NULL,
  basic_salary numeric NOT NULL,
  salary_type text CHECK (salary_type = ANY (ARRAY['monthly'::text, 'daily'::text, 'hourly'::text, 'commission_based'::text])),
  currency text DEFAULT 'INR'::text,
  effective_from date NOT NULL,
  effective_to date,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT staff_salaries_pkey PRIMARY KEY (id),
  CONSTRAINT staff_salaries_staff_id_fkey FOREIGN KEY (staff_id) REFERENCES public.staff(id),
  CONSTRAINT staff_salaries_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.stock_transfers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transfer_number text NOT NULL UNIQUE,
  product_id uuid,
  from_warehouse_id uuid,
  to_warehouse_id uuid,
  quantity integer NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'in_transit'::text, 'completed'::text, 'rejected'::text, 'cancelled'::text])),
  requested_by uuid,
  approved_by uuid,
  approved_at timestamp with time zone,
  completed_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_transfers_pkey PRIMARY KEY (id),
  CONSTRAINT stock_transfers_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT stock_transfers_from_warehouse_id_fkey FOREIGN KEY (from_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_transfers_to_warehouse_id_fkey FOREIGN KEY (to_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_transfers_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES public.profiles(id),
  CONSTRAINT stock_transfers_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.system_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  log_level text CHECK (log_level = ANY (ARRAY['debug'::text, 'info'::text, 'warning'::text, 'error'::text, 'critical'::text])),
  source text,
  message text NOT NULL,
  error_code text,
  stack_trace text,
  user_id uuid,
  request_id text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_logs_pkey PRIMARY KEY (id),
  CONSTRAINT system_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.system_settings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  setting_key text NOT NULL UNIQUE,
  setting_category text,
  setting_value jsonb,
  data_type text CHECK (data_type = ANY (ARRAY['string'::text, 'number'::text, 'boolean'::text, 'json'::text, 'array'::text])),
  description text,
  is_public boolean DEFAULT false,
  is_encrypted boolean DEFAULT false,
  updated_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_settings_pkey PRIMARY KEY (id),
  CONSTRAINT system_settings_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.tax_slabs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  hsn_code text,
  sac_code text,
  product_category text,
  igst_rate numeric NOT NULL,
  cgst_rate numeric NOT NULL,
  sgst_rate numeric NOT NULL,
  cess_rate numeric DEFAULT 0,
  effective_from date NOT NULL,
  effective_to date,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tax_slabs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  permission_id uuid,
  is_granted boolean DEFAULT true,
  granted_by uuid,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT user_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT user_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id),
  CONSTRAINT user_permissions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.warehouses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  location text,
  address text,
  city text,
  state text,
  postal_code text,
  owner_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT warehouses_pkey PRIMARY KEY (id),
  CONSTRAINT warehouses_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wholesaler_product_pricing (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wholesaler_id uuid NOT NULL,
  product_id uuid NOT NULL,
  price numeric NOT NULL,
  discount_percentage numeric DEFAULT 0,
  min_order_quantity integer DEFAULT 1,
  max_order_quantity integer,
  stock_available integer,
  is_available boolean DEFAULT true,
  delivery_time_days integer,
  last_updated timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wholesaler_product_pricing_pkey PRIMARY KEY (id),
  CONSTRAINT wholesaler_product_pricing_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id),
  CONSTRAINT wholesaler_product_pricing_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.wholesaler_retailer_links (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  wholesaler_id uuid,
  retailer_id uuid,
  region text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wholesaler_retailer_links_pkey PRIMARY KEY (id),
  CONSTRAINT wholesaler_retailer_links_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.profiles(id),
  CONSTRAINT wholesaler_retailer_links_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.profiles(id)
);