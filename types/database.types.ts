// This file was generated by the Supabase CLI and then enhanced with additional types

type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      profiles: {
        Row: Profile;
        Insert: Omit<Profile, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Profile, 'id' | 'created_at' | 'updated_at'>>;
      };
      products: {
        Row: Product;
        Insert: Omit<Product, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Product, 'id' | 'created_at' | 'updated_at'>>;
      };
      retailers: {
        Row: Retailer;
        Insert: Omit<Retailer, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Retailer, 'id' | 'created_at' | 'updated_at'>>;
      };
      orders: {
        Row: Order;
        Insert: Omit<Order, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Order, 'id' | 'created_at' | 'updated_at'>>;
      };
      order_items: {
        Row: OrderItem;
        Insert: Omit<OrderItem, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<OrderItem, 'id' | 'created_at' | 'updated_at'>>;
      };
      invoices: {
        Row: Invoice;
        Insert: Omit<Invoice, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Invoice, 'id' | 'created_at' | 'updated_at'>>;
      };
      payments: {
        Row: Payment;
        Insert: Omit<Payment, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Payment, 'id' | 'created_at' | 'updated_at'>>;
      };
      same_day_payments: {
        Row: SameDayPayment;
        Insert: Omit<SameDayPayment, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<SameDayPayment, 'id' | 'created_at' | 'updated_at'>>;
      };
      deliveries: {
        Row: Delivery;
        Insert: Omit<Delivery, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Delivery, 'id' | 'created_at' | 'updated_at'>>;
      };
      inventory: {
        Row: Inventory;
        Insert: Omit<Inventory, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Inventory, 'id' | 'created_at' | 'updated_at'>>;
      };
      activity_logs: {
        Row: ActivityLog;
        Insert: Omit<ActivityLog, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<ActivityLog, 'id' | 'created_at' | 'updated_at'>>;
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      user_role: 'admin' | 'manager' | 'viewer';
      order_status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'returned';
      invoice_status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';
      payment_status: 'pending' | 'completed' | 'failed' | 'refunded';
      delivery_status: 'pending' | 'in_transit' | 'out_for_delivery' | 'delivered' | 'failed';
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
};

// Enums
export type UserRole = Database['public']['Enums']['user_role'];
export type OrderStatus = Database['public']['Enums']['order_status'];
export type InvoiceStatus = Database['public']['Enums']['invoice_status'];
export type PaymentStatus = Database['public']['Enums']['payment_status'];
export type DeliveryStatus = Database['public']['Enums']['delivery_status'];

// Base interface for common fields
interface BaseEntity {
  id: string;
  created_at: string;
  updated_at?: string;
}

export interface Profile extends BaseEntity {
  email: string;
  full_name: string | null;
  avatar_url: string | null;
  role: UserRole;
  business_type: 'wholesaler' | 'retailer' | 'designer' | null;
  account_status: 'pending' | 'approved' | 'suspended' | 'rejected';
  gst_number: string | null;
  pan_number: string | null;
  business_name: string | null;
  verification_documents: Record<string, unknown> | null;
  verified_at: string | null;
  verified_by: string | null;
}

export interface Product extends BaseEntity {
  sku: string;
  name: string;
  description: string | null;
  category: string | null;
  brand: string | null;
  unit_price: number;
  cost_price: number | null;
  tax_rate: number;
  image_url: string | null;
  is_active: boolean;
}

export interface Retailer extends BaseEntity {
  name: string;
  email: string | null;
  phone: string | null;
  address: string | null;
  city: string | null;
  state: string | null;
  postal_code: string | null;
  country: string | null;
  tax_id: string | null;
  credit_limit: number;
  outstanding_balance: number;
  is_active: boolean;
  gstin: string | null;
}

export interface Order extends BaseEntity {
  order_number: string;
  retailer_id: string;
  status: OrderStatus;
  subtotal: number;
  tax_amount: number;
  discount_amount: number;
  total_amount: number;
  notes: string | null;
  created_by: string;
  retailer?: Retailer;
  items?: OrderItem[];
}

export interface OrderItem extends BaseEntity {
  order_id: string;
  product_id: string;
  quantity: number;
  unit_price: number;
  tax_rate: number;
  discount_amount: number;
  line_total: number;
  product?: Product;
}

export interface Invoice extends BaseEntity {
  invoice_number: string;
  order_id: string | null;
  retailer_id: string;
  status: InvoiceStatus;
  issue_date: string;
  due_date: string;
  subtotal: number;
  tax_amount: number;
  discount_amount: number;
  total_amount: number;
  notes: string | null;
  created_by: string;
  order?: Order;
  retailer?: Retailer;
  payments?: Payment[];
}

export interface Payment extends BaseEntity {
  payment_number: string;
  invoice_id: string | null;
  retailer_id: string;
  amount: number;
  payment_method: string | null;
  payment_date: string;
  status: PaymentStatus;
  reference_number: string | null;
  notes: string | null;
  is_same_day: boolean;
  created_by: string;
  gateway_transaction_id: string | null;
  gateway_name: string | null;
  invoice?: Invoice;
  retailer?: Retailer;
  same_day_payment?: SameDayPayment;
}

export interface SameDayPayment extends BaseEntity {
  payment_id: string;
  processed_at: string;
  processing_fee: number;
  net_amount: number;
  approved_by: string | null;
  notes: string | null;
  payment?: Payment;
  approver?: Profile;
}

export interface Delivery extends BaseEntity {
  order_id: string | null;
  delivery_number: string;
  status: DeliveryStatus;
  carrier: string | null;
  tracking_number: string | null;
  scheduled_date: string | null;
  delivered_date: string | null;
  delivery_address: string | null;
  recipient_name: string | null;
  recipient_phone: string | null;
  notes: string | null;
  order?: Order;
}

export interface Inventory extends BaseEntity {
  product_id: string;
  quantity_in_stock: number;
  reorder_level: number;
  reorder_quantity: number;
  warehouse_location: string | null;
  last_restocked_at: string | null;
  product?: Product;
}

export interface ActivityLog extends BaseEntity {
  user_id: string | null;
  action: string;
  entity_type: string | null;
  entity_id: string | null;
  metadata: Record<string, unknown> | null;
  ip_address: string | null;
  user_agent: string | null;
  changed_from: Record<string, unknown> | null;
  changed_to: Record<string, unknown> | null;
  user?: Profile;
}
